package com.mmiillkkaa.supernaturals.util;

import org.bukkit.ChatColor;
import org.bukkit.configuration.file.YamlConfiguration;

import com.mmiillkkaa.supernaturals.SupernaturalsPlugin;
import com.mmiillkkaa.supernaturals.io.SNLanguageHandler;

public enum Language {
    ADMIN_BOOST("admin_boost", "Admin boost!"),
    ALL_DATA_SAVE("all_data_save", "All config/player data has been saved!"),
    ALREADY_WHITELISTED("already_whitelisted", "You are already whitelisted!"),
    ANGEL_CURE_NOTICE_OTHER("angel_cure_notice_other", "&cCured by <PLAYER>"),
    ANGEL_CURE_NOTICE_SELF("angel_cure_notice_self", "Cured <PLAYER>"),
    ANGEL_DEATH("angel_death", "Flames have removed your holy powers!"),
    ANGEL_HEAL_NOTICE_OTHER("angel_heal_notice_other", "&cHealed by <PLAYER>"),
    ANGEL_HEAL_NOTICE_SELF("angel_heal_notice_self", "Healing <PLAYER>"),
    ANGEL_LIMIT_TARGET("angel_limit_target", "Angels cannot use diamond swords on animals!"),
    ANGEL_LIMIT_WEAPON("angel_limit_weapon", "Angels cannot use this weapon!"),
    ANGEL_SUMMON_COW("angel_summon_cow", "Summoned cow."),
    ANGEL_SUMMON_PIG("angel_summon_pig", "Summoned pig."),
    ANGEL_SUMMON_TOO_MUCH_WOLF("angel_summon_too_much_wolf", "&cToo much wolves, not enough space! (Stop spawning wolves!)"),
    ANGEL_SUMMON_WOLF("angel_summon_wolf", "Summoned wolf."),
    ANGEL_SUPERJUMP("angel_superjump", "SuperJump!"),
    ANGEL_SUPERJUMP_TRIGGER("angel_superjump_trigger", "SuperJump!"),
    ANGEL_SWIM("angel_swim", "Swimming in water"),
    BY_ADMIN("by_admin", "Admin"),
    CLASS_JOIN_SERVER("class_join_server", " <PLAYER> &6has joined the server."),
    CLASS_RESET("class_reset", "Your class has been reset because you are trying to bypass the mmSupernaturals whitelist!"),
    CONFIG_RELOAD("config_reload", "Config file has been reloaded"),
    DAEMON_CONVERT_NOTICE_OTHER("daemon_convert_notice_other", "&cYou have been converted to a demon by <PLAYER>"),
    DAEMON_CONVERT_NOTICE_OTHER_DESC("daemon_convert_notice_other_desc", "&cHeat builds up in your body..."),
    DAEMON_CONVERT_NOTICE_SELF("daemon_convert_notice_self", "Converted <PLAYER>"),
    DAEMON_DEATH("daemon_death", "Your icy death has cooled the infernal fires raging within your body."),
    DAEMON_FIREBALL_NOTICE_SELF("daemon_fireball_notice_self", "Fireball!"),
    DAEMON_LIMIT_WEAPON("daemon_limit_weapon", "Demons cannot use this weapon!"),
    DAEMON_LOVE_LAVA("daemon_love_lava", "Lava!"),
    DAEMON_ONLY("daemon_only", "Demons Only!"),
    DAEMON_SNARE_NOTICE_SELF("daemon_snare_notice_self", "Snare!"),
    DATA_RELOAD("data_reload", "Data file has been reloaded"),
    FULL_CURE("full_cure","&f<PLAYER>&c was cured of any curse!"),
    GHOUL_BOND_NOT_ALLOW("ghoul_bond_not_allow", "You cannot form a bond with a human."),
    GHOUL_BOND_NOTICE_OTHER("ghoul_bond_notice_other", "You now have an Unholy Bond with <PLAYER>!"),
    GHOUL_BOND_NOTICE_SELF("ghoul_bond_notice_self", "You now have an Unholy Bond with <PLAYER>"),
    GHOUL_BOND_REMOVE_NOTICE_OTHER("ghoul_bond_remove_notice_other", "Unholy Bond removed!"),
    GHOUL_BOND_REMOVE_NOTICE_SELF("ghoul_bond_remove_notice_self", "&cRemoved Unholy Bond from &f<PLAYER>"),
    GHOUL_BOND_TRIGGER("ghoul_bond_trigger", "Unholy Bond!"),
    GHOUL_DEATH("ghoul_death", "Your body dies... You feel a deep hatred for the living."),
    GHOUL_HATE_WATER("ghoul_hate_water", "Ghouls disintegrate in water!  Get Out Quick!"),
    GHOUL_IMMUNE_WEAPON("ghoul_immune_weapon", "Ghouls are immune to that weapon!"),
    GHOUL_LIMIT_WEAPON("ghoul_limit_weapon", "Ghouls cannot use this weapon!"),
    GHOUL_SUMMON_NOT_ALLOW("ghoul_summon_not_allow", "You cannot summon here."),
    GHOUL_SUMMON_NOTICE_SELF("ghoul_summon_notice_self", "Summoning a Zombie!"),
    HEALTH_REGEN("health_regen", "Healing!"),
    HUMAN_TO_ANGEL("human_to_angel", "Your spirit is lifted"),
    HUMAN_TO_DAEMON("human_to_daemon", "Hellfire races through your veins!"),
    HUMAN_TO_GHOUL("human_to_ghoul", "You have been transformed into a Ghoul!"),
    HUMAN_TO_WEREWOLF("human_to_werewolf", "You have mutated into a werewolf!"),
    INVALID_ARMOR_TYPE("invalid_armor_type", "Your class cannot wear this type of armor!"),
    INVALID_NUMBER("invalid_number", "Invalid Number."),
    INVALID_OPTION("invalid_option", "Invalid option."),
    INVALID_SUPERNATURAL_TYPE("invalid_supernatural_type", "Supernatural Type invalid!"),
    JOIN_NOT_ENABLE("join_not_enable", "This is not enabled, you are automatically in the mmSupernaturals fun!"),
    KILL_CREATURE("kill_creature", "Creature death!"),
    KILL_MONSTER("kill_monster", "Killed Monster"),
    KILL_PLAYER("kill_player", "Player killed!"),
    KILL_SELF("kill_self", "You have killed yourself!"),
    MISSING_PARAMETERS("missing_parameters", "Missing parameters. You must enter <AMOUNT> more."),
    MISSING_PLAYER("missing_player", "Missing player!"),
    NO_POWER("no_power", "Not enough power!"),
    NO_POWER_GAIN("no_power_gain", "You cannot gain power from a player with no power themselves."),
    NO_PREMISSION("no_premission", "You don't have premission to use this command."),
    NO_SUCH_COMMAND("no_such_command", "&cNo such command \"&f<CMD>&c\". Try /sn help"),
    NOT_ALLOW_PVP("not_allow_pvp","You can't do this in non-PvP areas"),
    NOT_SUPERNATURAL("not_supernatural", "Player is not a supernatural!"),
    NOT_WITCHHUNTER("not_witchhunter", "You are not a WitchHunter!"),
    ONLINE_PLAYERS("online_players", "&fOnline Supernatural Players&c"),
    ONLY_IN_GAME("only_in_game", "This command can only be used by ingame players."),
    ONLY_IN_GAME_COMMAND("only_in_game_command", "This command, sn <CMD>, is player-only"),
    ONLY_ON_PLAYER("only_on_player", "You can not use this on supernatural!"),
    ONLY_ON_SUPERNATUTAL("only_on_supernatutal", "You can not use this on player!"),
    PLAYER_NAME("player_name", "PlayerName"),
    PLAYER_NOT_FOUND("player_not_found", "Player not found!"),
    POWER("power", "POWER"),
    POWER_INFO("power_info", "You are a &f<TYPE>&c and your current power level is: &f<POWER>"),
    POWER_RESET("power_reset", "Power reset for player: <PLAYER>"),
    POWER_UP("power_up", "&f<PLAYER>&c has been powered up!"),
    PRIEST_ALTAR_NOT_ALLOW("priest_altar_not_allow", "You cannot use priest altars."),
    PRIEST_ALTAR_POWER_HUMAN("priest_altar_power_human", "The Church Altar radiates holy power."),
    PRIEST_ALTAR_POWER_SUPERNATURAL("priest_altar_power_supernatural", "The holy power of the Church tears you asunder!"),
    PRIEST_BANISH_NOTICE_OTHER("priest_banish_notice_other", "You were banished by &f<PLAYER>&c!"),
    PRIEST_BANISH_NOTICE_SELF("priest_banish_notice_self", "Banished <PLAYER>"),
    PRIEST_CURE_NOT_HOLD("priest_cure_not_hold", "&f<PLAYER>&c is not holding &f<MATERIAL>&c."),
    PRIEST_CURE_NOTICE_OTHER("priest_cure_notice_other", "&f<PLAYER>&c has restored your humanity"),
    PRIEST_CURE_NOTICE_SELF("priest_cure_notice_self", "Cured <PLAYER>"),
    PRIEST_DONATE_ACCEPT("priest_donate_accept", "The Church accepts your gracious donations of Bread, Fish, Grilled Pork and Apples."),
    PRIEST_DONATE_CONFIRM("priest_donate_confirm", "You donate these items to the Church:"),
    PRIEST_DONATE_ENOUGHT("priest_donate_enought", "The Church recognizes your holy spirit and accepts you into the priesthood."),
    PRIEST_DONATE_NOT_ENOGHT("priest_donate_not_enoght", "The Church judges your intended donate insufficient.  You must gather the following: "),
    PRIEST_DONATE_NOTICE_SELF("priest_donate_notice_self", "Donations!"),
    PRIEST_DONATE_ONLY("priest_donate_only", "The Church only accepts donations of Bread, Fish, Grilled Pork and Apples."),
    PRIEST_DONATE_REWARD("priest_donate_reward", "You receive some power for your remote donations."),
    PRIEST_DRAIN_NOTICE_OTHER("priest_drain_notice_other", "Drained by <PLAYER>"),
    PRIEST_DRAIN_NOTICE_SELF("priest_drain_notice_self", "Drained <PLAYER>'s power!'"),
    PRIEST_EXORISE_NOTICE_OTHER("priest_exorise_notice_other", "You were exorcised by &f<PLAYER>&c!"),
    PRIEST_EXORISE_NOTICE_SELF("priest_exorise_notice_self", "Exorcised <PLAYER>"),
    PRIEST_GUARDANGEL_NOTICE_OTHER("priest_guardangel_notice_other", "You now have a Guardian Angel!"),
    PRIEST_GUARDANGEL_NOTICE_SELF("priest_guardangel_notice_self", "Guardian Angel on &f<PLAYER>&c!"),
    PRIEST_GUARDANGEL_REMOVE_NOTICE_OTHER("priest_guardangel_remove_notice_other", "Guardian Angel removed!"),
    PRIEST_GUARDANGEL_REMOVE_NOTICE_SELF("priest_guardangel_remove_notice_self", "Removed Guardian Angel from &f<PLAYER>"),
    PRIEST_GUARDANGEL_TRIGGER("priest_guardangel_trigger", "Guardian Angel used!"),
    PRIEST_HEAL_NOTICE_OTHER("priest_heal_notice_other", "You were healed by &f<PLAYER>&c!"),
    PRIEST_HEAL_NOTICE_SELF("priest_heal_notice_self", "Healed <PLAYER>"),
    PRIEST_LEAVE_CRUSH("priest_leave_crush", "The Church excommunicates you!"),
    PRIEST_LIMIT_TARGET("priest_limit_target", "You cannot hurt innocent animals."),
    PRIEST_LIMIT_WEAPON("priest_limit_weapon", "Priests cannot use this weapon!"),
    SET_BANISH("set_banish", "Banish location set."),
    SET_CHRUSH("set_chrush", "Church location set."),
    SN_ADMIN_CMD_CONVERT("sn_admin_cmd_convert", "Turn self or player into any supernatural."),
    SN_ADMIN_CMD_CONVERT_NOTICE("sn_admin_cmd_convert_notice", "You are now a &f<TYPE>&c!"),
    SN_ADMIN_CMD_CURE("sn_admin_cmd_cure", "Cure self or player."),
    SN_ADMIN_CMD_CURE_NOTICE("sn_admin_cmd_cure_notice", "You have been restored to humanity!"),
    SN_ADMIN_CMD_POWER("sn_admin_cmd_power", "Give power to self or player."),
    SN_ADMIN_CMD_POWER_NOTICE("sn_admin_cmd_power_notice", "Power: &f<AMOUNT>&c(&f<DELTA>&c) <REASON>"),
    SN_ADMIN_CMD_RELOAD("sn_admin_cmd_reload", "Reload data from disk."),
    SN_ADMIN_CMD_RESET("sn_admin_cmd_reset", "Reset self or player's power."),
    SN_ADMIN_CMD_RESTARTTASK("sn_admin_cmd_restarttask", "Restarts the Task Timer."),
    SN_ADMIN_CMD_REVERT_NOTICE("sn_admin_cmd_revert_notice", "You been reverted to your previous state of being a &f<TYPE>&c!"),
    SN_ADMIN_CMD_RMTARGET("sn_admin_cmd_rmtarget", "Removes player from current WitchHunter kill list."),
    SN_ADMIN_CMD_SAVE("sn_admin_cmd_save", "Save data to disk."),
    SN_ADMIN_CMD_SETBANISH("sn_admin_cmd_setbanish", "Sets your current location as the priests' banish spot."),
    SN_ADMIN_CMD_SETCHRUSH("sn_admin_cmd_setchrush", "Sets your current location as the priests' church."),
    SN_ADMIN_HELP("sn_admin_help", "&fSupernatural Admin Help&c"),
    SN_ADMIN_SETUP("sn_admin_setup", "Setup wizard let you quick setup the plugin."),
    SN_ANGEL_DESC("sn_angel_desc", "A Human with a free spirit."),
    SN_ANGEL_NAME("sn_angel_name", "Angel"),
    SN_CMD_ADMIN("sn_cmd_admin", "Show list of admin-only commands"),
    SN_CMD_CLASSES("sn_cmd_classes", "Show the list of available Super-classes."),
    SN_CMD_JOIN_NO_PREMISSION("sn_cmd_join_no_premission", "You do not have permission to convert to a <TYPE>"),
    SN_CMD_JOIN_NOT_USE("sn_cmd_join_not_use", "You have not used the \"/sn join\" command!"),
    SN_CMD_KILLIST("sn_cmd_killist", "Show the list of current WitchHunter targets."),
    SN_CMD_LIST("sn_cmd_list", "List supernaturals on the server."),
    SN_CMD_POWER("sn_cmd_power", "Show current power level."),
    SN_DEMON_DESC("sn_demon_desc", "Possesses an unholy union with fire."),
    SN_DEMON_NAME("sn_demon_name", "Demon"),
    SN_GHOUL_DESC("sn_ghoul_desc", "Slow and very durable."),
    SN_GHOUL_NAME("sn_ghoul_name", "Ghoul"),
    SN_HUMAN_DESC("sn_human_desc", "Your standard run of the mill person."),
    SN_HUMAN_NAME("sn_human_name", "Human"),
    SN_PREIEST_NAME("sn_preiest_name", "Preiest"),
    SN_PRIEST_DESC("sn_priest_desc", "A person with significant power over the unholy."),
    SN_SETUP_CHRUSH_CMD("sn_setup_chrush_cmd", "Use the command /sn setChurch to allow players to use the altar."),
    SN_SETUP_CHRUSH_USAGE("sn_setup_chrush_usage", "Players can use the altar by right-clicking the <MATERIAL>"),
    SN_SETUP_CHURCH_ALTAR("sn_setup_church_altar", "To do this, make an altar, and put a <MATERIAL> in the center."),
    SN_SETUP_CHURCH_GREETING("sn_setup_church_greeting", "First, we will make a Church."),
    SN_SETUP_CHURSH_WITHIN_BLOCK("sn_setup_chursh_within_block", "Within 10 blocks of your <MATERIAL> in the altar,"),
    SN_SETUP_CONTINUE("sn_setup_continue", "To continue, type /sn setup again."),
    SN_SETUP_FINISH("sn_setup_finish", "Setup is finished! Congratulations!"),
    SN_SETUP_GREETING("sn_setup_greeting", "Hey there! This command will help you setup mmSupernaturals!"),
    SN_SETUP_HALL_GREETING("sn_setup_hall_greeting", "Okay, next, we have to make a WitchHunter hall."),
    SN_SETUP_HALL_SIGN("sn_setup_hall_sign", "Next to an Iron Door, place a sign with <MSG> on the 2nd line."),
    SN_VAMPIRE_DESC("sn_vampire_desc", "No they don't sparkle!"),
    SN_VAMPIRE_NAME("sn_vampire_name", "Vampire"),
    SN_WEREWOLF_DESC("sn_werewolf_desc", "Gain significant powers at night."),
    SN_WEREWOLF_NAME("sn_werewolf_name", "Werewolf"),
    SN_WITCHHUNTER_DESC("sn_witchhunter_desc", "Expert at bows and stealth."),
    SN_WITCHHUNTER_NAME("sn_witchhunter_name", "WitchHunter"),
    SUPERNATURAL_CLASS("supernatural_class", "&fSupernatural Classes&c"),
    SUPERNATURAL_HELP("supernatural_help", "&fSupernatural Help&c"),
    SUPERNATURAL_TYPE("supernatural_type", "SupernaturalType"),
    TAGEST_CURRENT("tagest_current", "&fCurrent WitchHunter Targets&c"),
    TARGET_NOT_ACTIVE_NOTICE_OTHER("target_not_active_notice_other", "You are not an active target."),
    TARGET_NOT_ACTIVE_NOTICE_SELF("target_not_active_notice_self", "&f<PLAYER>&c is not an active target."),
    TARGET_REMOVE_NOTICE_OTHER("target_remove_notice_other", "You were removed from the target list!"),
    TARGET_REMOVE_NOTICE_SELF("target_remove_notice_self", "&f<PLAYER>&c was removed from the target list!"),
    TASK_TIMER_RESTART("task_timer_restart", "Task Timer has been restarted."),
    TOO_MANY_PARAMETERS("too_many_parameters", "Too many parameters."),
    TRUCE_BREAK("truce_break", "You temporarily broke your truce with monsters!"),
    TRUCE_RESTORE("truce_restore", "Your truce with monsters has been restored!"),
    TRY_HELP("try_help", "Try /sn help"),
    TYPE_ALREADY("type_already", "&f<PLAYER>&c is already a &f<TYPE>&c !"),
    TYPE_TURN("type_turn", "&f<PLAYER>&c was turned into a &f<TYPE>&c !"),
    TYPE_TURN_BACK("type_turn_back", "&f<PLAYER>&c was turned BACK into a &f<TYPE>&c !"),
    UNKNOW_COMMAND("unknow_command", "&cUnknown command. Try /sn help"),
    VAMPIRE_ALTAR_CONFIRM("vampire_altar_confirm", "You use these items on the altar:"),
    VAMPIRE_ALTAR_CURE_FAIL("vampire_altar_cure_fail", "It can probably cure curses, but you feel fine."),
    VAMPIRE_ALTAR_CURE_INFO("vampire_altar_cure_info", "This altar looks pure and clean."),
    VAMPIRE_ALTAR_CURE_NOT_ENOUGH("vampire_altar_cure_not_enough", "Something happens... The <MATERIAL> draws energy from the <MATERIAL_SURROUND>... But there doesn't seem to be enough <MATERIAL_SURROUND> nearby."),
    VAMPIRE_ALTAR_CURE_SUCCESS("vampire_altar_cure_success", "The <MATERIAL> draws energy from the <MATERIAL_SURROUND>... Then the energy rushes through you and you feel pure and clean."),
    VAMPIRE_ALTAR_INFECT_INFO("vampire_altar_infect_info", "This altar looks really evil."),
    VAMPIRE_ALTAR_INFECT_NOT_ENOUGH("vampire_altar_infect_not_enough", "Something happens... The <MATERIAL> draws energy from the <MATERIAL_SURROUND>... But there doesn't seem to be enough <MATERIAL_SURROUND> nearby."),
    VAMPIRE_ALTAR_INFECT_SUCCESS("vampire_altar_infect_success", "The <MATERIAL> draws energy from the <MATERIAL_SURROUND>... The energy rushes through you and you feel a bitter cold..."),
    VAMPIRE_ALTAR_INFECT_SUPERNATURAL("vampire_altar_infect_supernatural", "This is of no use to you as you are already supernatural."),
    VAMPIRE_ALTAR_INFECT_VAMPIRE("vampire_altar_infect_vampire", "This is of no use to you as you are already a vampire."),
    VAMPIRE_ALTAR_NEED("vampire_altar_need", "To use it you need to collect these ingredients:"),
    VAMPIRE_ALTAR_NOT_ALLOW("vampire_altar_not_allow", "You cannot use vampire altars."),
    VAMPIRE_DEATH("vampire_death", "You feel your heart stop! You have contracted vampirism."),
    VAMPIRE_HATE_SUNLIGHT("vampire_hate_sunlight", "Vampires burn in sunlight! Take cover!"),
    VAMPIRE_HATE_WATER("vampire_hate_water", "Water!"),
    VAMPIRE_HATE_WOOD("vampire_hate_wood", "Vampires have a weakness to wood!"),
    VAMPIRE_LIMIT_EAT("vampire_limit_eat", "Vampires can't eat food. You must drink blood instead."),
    VAMPIRE_LIMIT_WEAPON("vampire_limit_weapon", "Vampires cannot use this weapon!"),
    VAMPIRE_ONLY("vampire_only", "Vampires Only!"),
    VAMPIRE_TELEPORT_NOT_SET("vampire_teleport_not_set", "You have not set a teleport location yet!"),
    VAMPIRE_TELEPORT_NOTICE_SELF("vampire_teleport_notice_self", "Teleport!"),
    VAMPIRE_TELEPORT_SET("vampire_teleport_set", "Teleport Location Saved!"),
    VAMPIRE_WATER_DAMAGE_NOTICE("vampire_water_damage_notice", "Not enough power to prevent water damage!"),
    WEREWOLF_ABILITY_LIMIT("werewolf_ability_limit", "Cannot use this ability during the day."),
    WEREWOLF_CURE_LIMIT("werewolf_cure_limit", "Cannot cure lycanthropy during the night."),
    WEREWOLF_DEATH("werewolf_death", "Your basic nature changes... You feel more in touch with your animal side."),
    WEREWOLF_EAT("werewolf_eat", "Eating!"),
    WEREWOLF_EAT_LIMIT("werewolf_eat_limit", "Werewolves do not gain power from Bread."),
    WEREWOLF_POTION_NEED("werewolf_potion_need", "You cannot create a Wolfbane potion without the following: "),
    WEREWOLF_POTION_NOTICE_SELF("werewolf_potion_notice_self", "You create a wolfbane potion!"),
    WEREWOLF_SUMMON_NOT_ALLOW("werewolf_summon_not_allow", "You cannot summon here."),
    WEREWOLF_SUMMON_TOO_MUCH_WOLF("werewolf_summon_too_much_wolf", "You already have all the wolves you can control."),
    WEREWOLF_SUMMON_WOLF("werewolf_summon_wolf", "Summoning wolf!"),
    WEREWOLF_WEAPON_LIMIT("werewolf_weapon_limit", "Werewolves cannot use this weapon at night!"),
    WERWWOLF_DASH_TRIGGER("werwwolf_dash_trigger", "Dash!"),
    WITCHHUNTER_ARROW_CHANGE("witchhunter_arrow_change", "Changed to arrow type: &f<TYPE>"),
    WITCHHUNTER_ARROW_SWITCH_NORMAL("witchhunter_arrow_switch_normal", "Switching to normal arrows."),
    WITCHHUNTER_BOUNTY_ADD("witchhunter_bounty_add", "&f<PLAYER>&c has been added to the WitchHunter target list!"),
    WITCHHUNTER_BOUNTY_GET("witchhunter_bounty_get", "Bounty Fulfilled!"),
    WITCHHUNTER_FIREARROW_NOTICE_SELF("witchhunter_firearrow_notice_self", "Fire Arrow!"),
    WITCHHUNTER_GRAPPLEARROW_NOTICE_SELF("witchhunter_grapplearrow_notice_self", "Grapple Arrow!"),
    WITCHHUNTER_INVIT_GREETING("witchhunter_invit_greeting", "You have been invited to join the WitchHunter society!"),
    WITCHHUNTER_INVIT_PROMPT("witchhunter_invit_prompt", "If you wish to accept this invitation visit a WitchHunters' Hall"),
    WITCHHUNTER_INVIT_SUCCESS("witchhunter_invit_success", "Welcome to the WitchHunter society!"),
    WITCHHUNTER_KILL_SELF("witchhunter_kill_self", "This action, voluntary or not, has rescinded your status as a WitchHunter."),
    WITCHHUNTER_LIMIT_WEAPON("witchhunter_limit_weapon", "WitchHunters cannot use this weapon!"),
    WITCHHUNTER_ONLY("witchhunter_only", "WitchHunters Only!"),
    WITCHHUNTER_POWERARROW_COOLDOWN("witchhunter_powerarrow_cooldown", "You are still recovering from Power Shot."),
    WITCHHUNTER_POWERARROW_NOTICE_SELF("witchhunter_powerarrow_notice_self", "Power Arrow!"),
    WITCHHUNTER_POWERARROW_READY("witchhunter_powerarrow_ready", "You can shoot again!"),
    WITCHHUNTER_SIGN_NOT_ALLOW("witchhunter_sign_not_allow", "You do not have permission to create WitchHunter signs"),
    WITCHHUNTER_TRIPLEARROW_NOTICE_SELF("witchhunter_triplearrow_notice_self", "Triple Arrow!"),
    YOU_DIE("you_die", "You died!"),
    ;

    private String def;
    private String path;

    Language(String path, String def) {
        this.path = path;
        this.def = def;
    }

    public String getDef() {
        return this.def;
    }

    public String getPath() {
        return this.path;
    }

    public void setDef(String def) {
        this.def = def;
    }

    public String toString() {
        String result = this.def;
        try {
            YamlConfiguration config = SNLanguageHandler.getConfig();
            if (config.isString(this.path)) {
                result = config.getString(this.path);
            }
        } catch(Exception e){
            SupernaturalsPlugin.log(String.format(
                    "Convert to string fail - %s, path: %s, config: %s", e,
                    this.path, SNLanguageHandler.getConfig()));
        }
        result = ChatColor.translateAlternateColorCodes('&', result);
        return result;
    }

}
